dplyr::mutate( X2065 = dplyr::if_else(
( X2060 * ( 1 - improvement_rate ) ) >= ( X2015 * ( 1 - max_improvement ) ),
X2060 * ( 1 - improvement_rate ),
( X2015 * ( 1 - max_improvement )  ) ) ) %>%
dplyr::mutate( X2070 = dplyr::if_else(
( X2065 * ( 1 - improvement_rate ) ) >= ( X2015 * ( 1 - max_improvement ) ),
X2065 * ( 1 - improvement_rate ),
( X2015 * ( 1 - max_improvement )  ) ) ) %>%
dplyr::mutate( X2075 = dplyr::if_else(
( X2070 * ( 1 - improvement_rate ) ) >= ( X2015 * ( 1 - max_improvement ) ),
X2070 * ( 1 - improvement_rate ),
( X2015 * ( 1 - max_improvement )  ) ) ) %>%
dplyr::mutate( X2080 = dplyr::if_else(
( X2075 * ( 1 - improvement_rate ) ) >= ( X2015 * ( 1 - max_improvement ) ),
X2075 * ( 1 - improvement_rate ),
( X2015 * ( 1 - max_improvement )  ) ) ) %>%
dplyr::mutate( X2085 = dplyr::if_else(
( X2080 * ( 1 - improvement_rate ) ) >= ( X2015 * ( 1 - max_improvement ) ),
X2080 * ( 1 - improvement_rate ),
( X2015 * ( 1 - max_improvement )  ) ) ) %>%
dplyr::mutate( X2090 = dplyr::if_else(
( X2085 * ( 1 - improvement_rate ) ) >= ( X2015 * ( 1 - max_improvement ) ),
X2085 * ( 1 - improvement_rate ),
( X2015 * ( 1 - max_improvement )  ) ) ) %>%
dplyr::mutate( X2095 = dplyr::if_else(
( X2090 * ( 1 - improvement_rate ) ) >= ( X2015 * ( 1 - max_improvement ) ),
X2090 * ( 1 - improvement_rate ),
( X2015 * ( 1 - max_improvement )  ) ) ) %>%
dplyr::mutate( X2100 = dplyr::if_else(
( X2095 * ( 1 - improvement_rate ) ) >= ( X2015 * ( 1 - max_improvement ) ),
X2095 * ( 1 - improvement_rate ),
( X2015 * ( 1 - max_improvement )  ) ) )
# E. Create bio + CCS and extend coal w/CCS
ccs_costs <- add_coal_and_bio %>%
dplyr::select( -X2040, -improvement_to_2040, -max_improvement ) %>%
dplyr::bind_rows( existing_coal_bio %>% dplyr::select( -X2040, -improvement_to_2040, -max_improvement  ) ) %>%
tidyr::spread( technology, X2015 ) %>%
dplyr::mutate( X2015 = dplyr::if_else( subsector.name == "biomass",
!!rlang::sym( "biomass to H2 CCS" ) -
!!rlang::sym( "biomass to H2" ),
dplyr::if_else( subsector.name == "coal",
!!rlang::sym( "coal chemical CCS" ) -
!!rlang::sym( "coal chemical" ),
NA_real_ ) ) ) %>%
dplyr::select(  sector.name, subsector.name, minicam.non.energy.input, units,
X2015 ) %>%
#       Set bio's CCS tech to the same improvement rate as coal's, otherwise bio + CCS gets cheaper than coal + CCS
dplyr::left_join( elec_IGCC_CCS_cost_improvement %>%
dplyr::select( subsector.name, max_improvement ) %>%
dplyr::filter( subsector.name == "coal" ) %>%
dplyr::mutate( subsector.name = "biomass" ) %>%
dplyr::bind_rows(  elec_IGCC_CCS_cost_improvement %>%
dplyr::select( subsector.name, max_improvement ) %>%
dplyr::filter( subsector.name == "coal" )  ),
by = "subsector.name" ) %>%
dplyr::mutate( X1971 = X2015,
X2100 = X2015  * ( 1 - max_improvement ),
improvement_rate = ( 1 -
( ( X2100 / X2015 ) ^
( 1 / ( ( 2100 - 2015 ) / 5 ) )
) ) ) %>%
dplyr::mutate( X2020 = dplyr::if_else(
( X2015 * ( 1 - improvement_rate ) ) >= X2100,
X2015 * ( 1 - improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2025 = dplyr::if_else(
( X2020 * ( 1 - improvement_rate ) ) >= X2100,
X2020 * ( 1 - improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2030 = dplyr::if_else(
( X2025 * ( 1 - improvement_rate ) ) >= X2100,
X2025 * ( 1 - improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2035 = dplyr::if_else(
( X2030 * ( 1 - improvement_rate ) ) >= X2100,
X2030 * ( 1 - improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2040 = dplyr::if_else(
( X2035 * ( 1 - improvement_rate ) ) >= X2100,
X2035 * ( 1 - improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2045 = dplyr::if_else(
( X2040 * ( 1 - improvement_rate ) ) >= X2100,
X2040 * ( 1 - improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2050 = dplyr::if_else(
( X2045 * ( 1 - improvement_rate ) ) >= X2100,
X2045 * ( 1 - improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2055 = dplyr::if_else(
( X2050 * ( 1 - improvement_rate ) ) >= X2100,
X2050 * ( 1 - improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2060 = dplyr::if_else(
( X2055 * ( 1 - improvement_rate ) ) >= X2100,
X2055 * ( 1 - improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2065 = dplyr::if_else(
( X2060 * ( 1 - improvement_rate ) ) >= X2100,
X2060 * ( 1 - improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2070 = dplyr::if_else(
( X2065 * ( 1 - improvement_rate ) ) >= X2100,
X2065 * ( 1 - improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2075 = dplyr::if_else(
( X2070 * ( 1 - improvement_rate ) ) >= X2100,
X2070 * ( 1 - improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2080 = dplyr::if_else(
( X2075 * ( 1 - improvement_rate ) ) >= X2100,
X2075 * ( 1 - improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2085 = dplyr::if_else(
( X2080 * ( 1 - improvement_rate ) ) >= X2100,
X2080 * ( 1 - improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2090 = dplyr::if_else(
( X2085 * ( 1 - improvement_rate ) ) >= X2100,
X2085 * ( 1 - improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2095 = dplyr::if_else(
( X2090 * ( 1 - improvement_rate ) ) >= X2100,
X2090 * ( 1 - improvement_rate ),
X2100 ) )
bio_w_ccs <- H2A_NE_cost_GCAM_years %>%
dplyr::filter( technology == "biomass to H2" ) %>%
dplyr::select( sector.name, subsector.name, technology, minicam.non.energy.input,
units, GCAM_H2_input_Xyears ) %>%
dplyr::bind_rows( ccs_costs %>%
dplyr::select( sector.name, subsector.name, minicam.non.energy.input,
units, GCAM_H2_input_Xyears ) %>%
dplyr::filter( subsector.name == "biomass"  ) %>%
dplyr::mutate( technology = "CCS_cost" ) ) %>%
tidyr::gather( key = year, value = variable_value, GCAM_H2_input_Xyears ) %>%
tidyr::spread( technology, variable_value ) %>%
dplyr::mutate( biomass_CCS = !!rlang::sym( "biomass to H2" ) + CCS_cost ) %>%
dplyr::select( -!!rlang::sym( "biomass to H2" ), -CCS_cost ) %>%
dplyr::mutate( technology = "biomass to H2 CCS" ) %>%
tidyr::spread( year, biomass_CCS )
coal_w_CCS <- H2A_NE_cost_GCAM_years %>%
dplyr::filter( technology == "coal chemical" ) %>%
dplyr::select( sector.name, subsector.name, technology, minicam.non.energy.input,
units, GCAM_H2_input_Xyears ) %>%
dplyr::bind_rows( ccs_costs %>%
dplyr::select( sector.name, subsector.name, minicam.non.energy.input,
units, GCAM_H2_input_Xyears ) %>%
dplyr::filter( subsector.name == "coal"  ) %>%
dplyr::mutate( technology = "CCS_cost" ) ) %>%
tidyr::gather( key = year, value = variable_value, GCAM_H2_input_Xyears ) %>%
tidyr::spread( technology, variable_value ) %>%
dplyr::mutate( coal_CCS = !!rlang::sym( "coal chemical" ) + CCS_cost ) %>%
dplyr::select( -!!rlang::sym( "coal chemical" ), -CCS_cost ) %>%
dplyr::mutate( technology = "coal chemical CCS" ) %>%
tidyr::spread( year, coal_CCS )
H2A_NE_add_missing_techs <- H2A_NE_cost_GCAM_years %>%
dplyr::filter( !( technology %in% c( "biomass to H2 CCS", "coal chemical CCS" ) ) ) %>%
dplyr::bind_rows( bio_w_ccs, coal_w_CCS ) %>%
#       Calculations to check extension
dplyr::mutate( improvement_to_2040_check  = ( 1 - ( X2040 / X2015 ) ) ) %>%
dplyr::mutate( check_2040 = dplyr::if_else( round( improvement_to_2040 , 8 ) == round( improvement_to_2040_check, 8 ),
TRUE, FALSE ) ) %>%
dplyr::mutate( max_improvement_check = ( 1 - ( X2100 / X2015 ) ) ) %>%
dplyr::mutate( check_2100 = dplyr::if_else( max_improvement >= round( max_improvement_check, 2 ),
TRUE, FALSE ) )  %>%
#       Set to true for technologies which were created
dplyr::mutate( check_2040 = dplyr::if_else( technology %in% c( "biomass to H2 CCS", "coal chemical CCS" ),
TRUE, check_2040 ),
check_2100 = dplyr::if_else( technology %in% c( "biomass to H2 CCS", "coal chemical CCS" ),
TRUE, check_2100 ) )
# F. Check extension values
if( any( H2A_NE_cost_GCAM_years$check_2040 == FALSE ) ){
stop( "One or more technologies have an improvement to 2040 which is not equal to NREL H2A's improvment to 2040..." )
}
if( any( H2A_NE_cost_GCAM_years$check_2100 == FALSE ) ){
stop( "One or more technologies have an improvement to 2100 which is larger than the specified max improvement rate..." )
}
# G. Final data cleaning
GCAM_H2_prod_NE_cost <- H2A_NE_add_missing_techs %>%
dplyr::select( sector.name, subsector.name, technology, minicam.non.energy.input,
GCAM_H2_input_Xyears ) %>%
dplyr::rename_at( .vars = GCAM_H2_input_Xyears,
.funs = remove_X_years ) %>%
dplyr::arrange( sector.name, subsector.name, technology )
# ------------------------------------------------------------------------------
# TODO V. Process coef data for each H2A technology
# TODO: add notes for Jay about where other stuff would have to be set
# A. Combine all inputs into one
if( multiple_inputs == FALSE ){
#        1.) Conversion for electricity to fuel ( = elec requirement * 3 )
H2A_coef_elec_sum <- H2A_coef %>%
dplyr::rename( "X2015" = "2015",
"X2040" = "2040" ) %>%
dplyr::mutate( X2015 = dplyr::if_else( minicam.non.energy.input == "elect_td_ind" &
units == "GJ in /kg H2 out",
X2015 *  GJ_fuel_per_GJ_elec,
X2015 ),
X2040 = dplyr::if_else( minicam.non.energy.input == "elect_td_ind" &
units == "GJ in /kg H2 out",
X2040 *  GJ_fuel_per_GJ_elec,
X2040 ),
minicam.non.energy.input = dplyr::if_else( minicam.non.energy.input == "elect_td_ind" &
technology %in% c( "biomass to H2", "biomass to H2 CCS" ),
"regional biomass", minicam.non.energy.input ),
minicam.non.energy.input = dplyr::if_else( minicam.non.energy.input == "elect_td_ind" &
technology %in% c( "coal chemical", "coal chemical CCS" ),
"regional coal", minicam.non.energy.input ),
minicam.non.energy.input = dplyr::if_else( minicam.non.energy.input == "elect_td_ind" &
technology %in% c( "natural gas steam reforming", "natural gas steam reforming CCS" ) &
sector.name == "H2 central production",
"regional natural gas", minicam.non.energy.input ),
minicam.non.energy.input = dplyr::if_else( minicam.non.energy.input == "elect_td_ind" &
technology == "natural gas steam reforming" &
sector.name == "H2 forecourt production",
"delivered gas", minicam.non.energy.input ) ) %>%
dplyr::select( -notes ) %>%
dplyr::group_by( sector.name, subsector.name, technology, minicam.non.energy.input, units ) %>%
dplyr::summarize_all( funs( sum( . ) ) ) %>%
dplyr::ungroup( )
#        TODO: use GCAM gas processing coeff 2.) Conversion for ng to bio
H2A_coef_ng_sum <- H2A_coef_elec_sum %>%
dplyr::mutate( X2015 = dplyr::if_else( minicam.non.energy.input == "regional natural gas" &
subsector.name == "biomass",
X2015 *  GJ_bio_per_GJ_bio_gas,
X2015 ),
X2040 = dplyr::if_else( minicam.non.energy.input == "regional natural gas" &
subsector.name == "biomass",
X2040 *  GJ_bio_per_GJ_bio_gas,
X2040 ),
minicam.non.energy.input = dplyr::if_else( minicam.non.energy.input == "regional natural gas" &
subsector.name == "biomass",
"regional biomass", minicam.non.energy.input ) ) %>%
dplyr::group_by( sector.name, subsector.name, technology, minicam.non.energy.input, units ) %>%
dplyr::summarize_all( funs( sum( . ) ) ) %>%
dplyr::ungroup( )
H2A_coef_reformatted <- H2A_coef_ng_sum
} else {
H2A_coef_reformatted <- H2A_coef %>%
dplyr::rename( "X2015" = "2015",
"X2040" = "2040" ) %>%
dplyr::select( -notes )
}
# B. Convert Units:
#    From: GJ in / kg H2 out
#    To:   GJ H2 out / GJ in )
H2A_eff <- H2A_coef_reformatted %>%
dplyr::mutate( X2015 = dplyr::if_else( units == "GJ in /kg H2 out",
( ( X2015 / GJ_per_kgH2 ) ^ -1),
X2015 ),
X2040 = dplyr::if_else( units == "GJ in /kg H2 out",
( ( X2040 / GJ_per_kgH2 ) ^ -1),
X2040 ),
units = dplyr::if_else( units == "GJ in /kg H2 out",
"GJ hydrogen output / GJ input",
units ) )
# C. Without doing efficiency for NG and electricity independently for the 'natural gas steam reforming'
#    technology the efficiency for the NG input actually goes down by 2040.
#    Set NG SMR (forecourt and central) 2040 efficiency to 2015, slow improvement afterwards
H2A_eff_fix_NG <- H2A_eff %>%
dplyr::mutate( X2040 = dplyr::if_else( technology  == "natural gas steam reforming",
X2015, X2040 ) )
# D. Calculate improvement between 2015 and 2040
H2A_eff_improvement <- H2A_eff_fix_NG %>%
dplyr::mutate( improvement_to_2040 = ( ( X2040 - X2015 ) / X2015 ),
#    Set improvement rate
improvement_rate = ( ( ( X2040 / X2015 ) ^
( 1 / ( ( 2040 - 2015 ) / 5 ) ) )
- 1 ) )
# E. Add X2015 value for coal w/o CCS and bio w/CCS
existing_coal_bio_eff <- H2A_eff_improvement %>%
dplyr::filter( technology %in% c( "biomass to H2", "coal chemical CCS" ) )
bio_no_CCS_eff <- existing_coal_bio_eff %>%
dplyr::filter( technology == "biomass to H2" )
bio_no_CCS_improv_2040_eff <- bio_no_CCS_eff$improvement_to_2040
bio_no_CCS_improv_rate <- bio_no_CCS_eff$improvement_rate
add_coal_and_bio_eff <- existing_coal_bio_eff %>%
dplyr::select( sector.name, subsector.name, technology, minicam.non.energy.input,
units, X2015 ) %>%
dplyr::mutate( X2015 = dplyr::if_else( subsector.name == "coal",
X2015 / elec_IGCC_2015_eff_ratio_coal$IGCC_CCS_no_CCS_2015_ratio,
dplyr::if_else( subsector.name == "biomass",
X2015 * elec_IGCC_2015_eff_ratio_bio$IGCC_CCS_no_CCS_2015_ratio,
NA_real_ ) ),
technology = dplyr::if_else( subsector.name == "coal",
"coal chemical",
dplyr::if_else( subsector.name == "biomass",
"biomass to H2 CCS", NA_character_ ) ),
#                     Set coal w/o CCS improvement equal to bio w/o CCS
improvement_to_2040 = dplyr::if_else( technology == "coal chemical",
bio_no_CCS_improv_2040_eff, NA_real_ ),
improvement_rate = dplyr::if_else( technology == "coal chemical",
bio_no_CCS_improv_rate, NA_real_ ),
X2040 = dplyr::if_else( technology == "coal chemical",
X2015 * ( 1 - improvement_to_2040 ), NA_real_ ) )
H2A_eff_add_2015_techs <- H2A_eff_improvement %>%
dplyr::filter( !( technology %in% c( "coal chemical", "biomass to H2 CCS" ) ) ) %>%
dplyr::bind_rows( add_coal_and_bio_eff ) %>%
#      Max improvement of efficiency currently set to 0.5% improvement beyond improvement to 2040,
#      relative to 2015
dplyr::mutate( max_improvement = improvement_to_2040 + 0.005 )
# F. Extend assumptions to cover all GCAM years
H2A_eff_GCAM_years <- H2A_eff_add_2015_techs %>%
dplyr::bind_cols( as.data.frame( H2A_missing_Xyears_cols ) ) %>%
dplyr::select( sector.name, subsector.name, technology, minicam.non.energy.input,
units, GCAM_H2_input_Xyears, improvement_to_2040, improvement_rate, max_improvement ) %>%
dplyr::mutate( X1971 = X2015 ) %>%
dplyr::mutate( X2020 = X2015 * ( 1 + improvement_rate ) ) %>%
dplyr::mutate( X2025 = X2020 * ( 1 + improvement_rate ) ) %>%
dplyr::mutate( X2030 = X2025 * ( 1 + improvement_rate ) ) %>%
dplyr::mutate( X2035 = X2030 * ( 1 + improvement_rate ) ) %>%
dplyr::mutate( X2040 = X2035 * ( 1 + improvement_rate ) ) %>%
#      Improvement beyond 2040 set to 0.1% each period, unless it exceeds the maximum improvement assumed above
dplyr::mutate( X2045 = dplyr::if_else(
( X2040 * ( 1 + 0.001 ) ) <= ( X2015 * ( 1 + max_improvement ) ),
X2040 * ( 1 + + 0.001 ),
( X2015 * ( 1 + max_improvement )  ) ) ) %>%
dplyr::mutate( X2050 = dplyr::if_else(
( X2045 * ( 1 + 0.001 ) ) <= ( X2015 * ( 1 + max_improvement ) ),
X2045 * ( 1 + + 0.001 ),
( X2015 * ( 1 + max_improvement )  ) ) ) %>%
dplyr::mutate( X2055 = dplyr::if_else(
( X2050 * ( 1 + 0.001 ) ) <= ( X2015 * ( 1 + max_improvement ) ),
X2050 * ( 1 + + 0.001 ),
( X2015 * ( 1 + max_improvement )  ) ) ) %>%
dplyr::mutate( X2060 = dplyr::if_else(
( X2055 * ( 1 + 0.001 ) ) <= ( X2015 * ( 1 + max_improvement ) ),
X2055 * ( 1 + + 0.001 ),
( X2015 * ( 1 + max_improvement )  ) ) ) %>%
dplyr::mutate( X2065 = dplyr::if_else(
( X2060 * ( 1 + 0.001 ) ) <= ( X2015 * ( 1 + max_improvement ) ),
X2060 * ( 1 + + 0.001 ),
( X2015 * ( 1 + max_improvement )  ) ) ) %>%
dplyr::mutate( X2070 = dplyr::if_else(
( X2065 * ( 1 + 0.001 ) ) <= ( X2015 * ( 1 + max_improvement ) ),
X2065 * ( 1 + + 0.001 ),
( X2015 * ( 1 + max_improvement )  ) ) ) %>%
dplyr::mutate( X2075 = dplyr::if_else(
( X2070 * ( 1 + 0.001 ) ) <= ( X2015 * ( 1 + max_improvement ) ),
X2070 * ( 1 + + 0.001 ),
( X2015 * ( 1 + max_improvement )  ) ) ) %>%
dplyr::mutate( X2080 = dplyr::if_else(
( X2075 * ( 1 + 0.001 ) ) <= ( X2015 * ( 1 + max_improvement ) ),
X2075 * ( 1 + + 0.001 ),
( X2015 * ( 1 + max_improvement )  ) ) ) %>%
dplyr::mutate( X2085 = dplyr::if_else(
( X2080 * ( 1 + 0.001 ) ) <= ( X2015 * ( 1 + max_improvement ) ),
X2080 * ( 1 + + 0.001 ),
( X2015 * ( 1 + max_improvement )  ) ) ) %>%
dplyr::mutate( X2090 = dplyr::if_else(
( X2085 * ( 1 + 0.001 ) ) <= ( X2015 * ( 1 + max_improvement ) ),
X2085 * ( 1 + + 0.001 ),
( X2015 * ( 1 + max_improvement )  ) ) ) %>%
dplyr::mutate( X2095 = dplyr::if_else(
( X2090 * ( 1 + 0.001 ) ) <= ( X2015 * ( 1 + max_improvement ) ),
X2090 * ( 1 + + 0.001 ),
( X2015 * ( 1 + max_improvement )  ) ) ) %>%
dplyr::mutate( X2100 = dplyr::if_else(
( X2095 * ( 1 + 0.001 ) ) <= ( X2015 * ( 1 + max_improvement ) ),
X2095 * ( 1 + + 0.001 ),
( X2015 * ( 1 + max_improvement )  ) ) )
# G. Create bio + CCS and extend coal w/CCS
ccs_eff <- add_coal_and_bio_eff %>%
dplyr::select( -X2040, -improvement_to_2040, -improvement_rate ) %>%
dplyr::bind_rows( existing_coal_bio_eff %>% dplyr::select( -X2040, -improvement_to_2040, -improvement_rate  ) ) %>%
tidyr::spread( technology, X2015 ) %>%
#      Calculate efficiency loss from carbon capture in 2015
dplyr::mutate( X2015 = dplyr::if_else( subsector.name == "biomass",
!!rlang::sym( "biomass to H2 CCS" ) -
!!rlang::sym( "biomass to H2" ),
dplyr::if_else( subsector.name == "coal",
!!rlang::sym( "coal chemical CCS" ) -
!!rlang::sym( "coal chemical" ),
NA_real_ ) ) ) %>%
dplyr::select(  sector.name, subsector.name, minicam.non.energy.input, units,
X2015 ) %>%
#     Set improvement rate for the efficiency loss based on CCS efficiency loss in the power sector
dplyr::left_join( elec_IGCC_CCS_eff_improvement %>%
dplyr::select( subsector.name, max_improvement ),
by = "subsector.name" ) %>%
dplyr::mutate( X1971 = X2015,
X2100 = X2015  * ( 1 - max_improvement ),
improvement_rate = ( ( ( X2100 / X2015 ) ^
( 1 / ( ( 2100 - 2015 ) / 5 ) ) )
- 1 ) ) %>%
dplyr::mutate( X2020 = dplyr::if_else(
( X2015 * ( 1 + improvement_rate ) ) <= X2100,
X2015 * ( 1 + improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2025 = dplyr::if_else(
( X2020 * ( 1 + improvement_rate ) ) <= X2100,
X2020 * ( 1 + improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2030 = dplyr::if_else(
( X2025 * ( 1 + improvement_rate ) ) <= X2100,
X2025 * ( 1 + improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2035 = dplyr::if_else(
( X2030 * ( 1 + improvement_rate ) ) <= X2100,
X2030 * ( 1 + improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2040 = dplyr::if_else(
( X2035 * ( 1 + improvement_rate ) ) <= X2100,
X2035 * ( 1 + improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2045 = dplyr::if_else(
( X2040 * ( 1 + improvement_rate ) ) <= X2100,
X2040 * ( 1 + improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2050 = dplyr::if_else(
( X2045 * ( 1 + improvement_rate ) ) <= X2100,
X2045 * ( 1 + improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2055 = dplyr::if_else(
( X2050 * ( 1 + improvement_rate ) ) <= X2100,
X2050 * ( 1 + improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2060 = dplyr::if_else(
( X2055 * ( 1 + improvement_rate ) ) <= X2100,
X2055 * ( 1 + improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2065 = dplyr::if_else(
( X2060 * ( 1 + improvement_rate ) ) <= X2100,
X2060 * ( 1 + improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2070 = dplyr::if_else(
( X2065 * ( 1 + improvement_rate ) ) <= X2100,
X2065 * ( 1 + improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2075 = dplyr::if_else(
( X2070 * ( 1 + improvement_rate ) ) <= X2100,
X2070 * ( 1 + improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2080 = dplyr::if_else(
( X2075 * ( 1 + improvement_rate ) ) <= X2100,
X2075 * ( 1 + improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2085 = dplyr::if_else(
( X2080 * ( 1 + improvement_rate ) ) <= X2100,
X2080 * ( 1 + improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2090 = dplyr::if_else(
( X2085 * ( 1 + improvement_rate ) ) <= X2100,
X2085 * ( 1 + improvement_rate ),
X2100 ) ) %>%
dplyr::mutate( X2095 = dplyr::if_else(
( X2090 * ( 1 + improvement_rate ) ) <= X2100,
X2090 * ( 1 + improvement_rate ),
X2100 ) )
bio_w_ccs_eff <- H2A_eff_GCAM_years %>%
dplyr::filter( technology == "biomass to H2" ) %>%
dplyr::select( sector.name, subsector.name, technology, minicam.non.energy.input,
units, GCAM_H2_input_Xyears ) %>%
dplyr::bind_rows( ccs_eff %>%
dplyr::select( sector.name, subsector.name, minicam.non.energy.input,
units, GCAM_H2_input_Xyears ) %>%
dplyr::filter( subsector.name == "biomass"  )  %>%
dplyr::mutate( technology = "CCS_eff_loss" ) ) %>%
tidyr::gather( key = year, value = variable_value, GCAM_H2_input_Xyears ) %>%
tidyr::spread( technology, variable_value ) %>%
dplyr::mutate( biomass_CCS = !!rlang::sym( "biomass to H2" ) + CCS_eff_loss ) %>%
dplyr::select( -!!rlang::sym( "biomass to H2" ), -CCS_eff_loss ) %>%
dplyr::mutate( technology = "biomass to H2 CCS" ) %>%
tidyr::spread( year, biomass_CCS )
coal_w_CCS_eff <- H2A_eff_GCAM_years %>%
dplyr::filter( technology == "coal chemical" ) %>%
dplyr::select( sector.name, subsector.name, technology, minicam.non.energy.input,
units, GCAM_H2_input_Xyears ) %>%
dplyr::bind_rows( ccs_eff %>%
dplyr::select( sector.name, subsector.name, minicam.non.energy.input,
units, GCAM_H2_input_Xyears ) %>%
dplyr::filter( subsector.name == "coal"  )  %>%
dplyr::mutate( technology = "CCS_eff_loss" ) ) %>%
tidyr::gather( key = year, value = variable_value, GCAM_H2_input_Xyears ) %>%
tidyr::spread( technology, variable_value ) %>%
dplyr::mutate( coal_CCS = !!rlang::sym( "coal chemical" ) + CCS_eff_loss ) %>%
dplyr::select( -!!rlang::sym( "coal chemical" ), -CCS_eff_loss ) %>%
dplyr::mutate( technology = "coal chemical CCS" ) %>%
tidyr::spread( year, coal_CCS )
H2A_eff_add_missing_techs <- H2A_eff_GCAM_years %>%
dplyr::filter( !( technology %in% c( "biomass to H2 CCS", "coal chemical CCS" ) ) ) %>%
dplyr::bind_rows( bio_w_ccs_eff, coal_w_CCS_eff ) %>%
#      Calculations to check extension
dplyr::mutate( improvement_to_2040_check  = ( ( 1 - ( X2040 / X2015 ) ) * -1 ) ) %>%
dplyr::mutate( check_2040 = dplyr::if_else( round( improvement_to_2040 , 8 ) == round( improvement_to_2040_check, 8 ),
TRUE, FALSE ) ) %>%
dplyr::mutate( max_improvement_check = ( ( 1 - ( X2100 / X2015 ) ) * -1 ) ) %>%
dplyr::mutate( check_2100 = dplyr::if_else( round( max_improvement, 8) >= round( max_improvement_check, 8 ),
TRUE, FALSE ) )  %>%
#       Set to true for technologies which were created
dplyr::mutate( check_2040 = dplyr::if_else( technology %in% c( "biomass to H2 CCS", "coal chemical CCS" ),
TRUE, check_2040 ),
check_2100 = dplyr::if_else( technology %in% c( "biomass to H2 CCS", "coal chemical CCS" ),
TRUE, check_2100 ) )
# H. Check extension values
if( any( H2A_eff_add_missing_techs$check_2040 == FALSE ) ){
stop( "One or more technologies have an improvement to 2040 which is not equal to NREL H2A's improvment to 2040..." )
}
if( any( H2A_eff_add_missing_techs$check_2100 == FALSE ) ){
stop( "One or more technologies have an improvement to 2100 which is larger than the specified max improvement rate..." )
}
# I. Final data cleaning
# TODO output units for costs and efficiencies since I remove them
GCAM_H2_prod_eff <- H2A_eff_add_missing_techs %>%
dplyr::select( sector.name, subsector.name, technology, minicam.non.energy.input,
GCAM_H2_input_Xyears ) %>%
dplyr::rename_at( .vars = GCAM_H2_input_Xyears,
.funs = remove_X_years ) %>%
dplyr::arrange( sector.name, subsector.name, technology )
View(GCAM_H2_prod_eff)
View(ccs_eff)
0.6649117 - 0.01826553
0.6466462
